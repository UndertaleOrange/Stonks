<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_border = true;
init_window = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//only needed if you modify the resolution when you change to borderless windowed
bwindow_init(window_get_width(), window_get_height(), window_handle());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Method 1 cont

if(init_window)
{
    if(is_border)
    {
        //passes the desired width and height and the window handle to the dll, resizes the window, removes the border, and sets it to the front
        bwindow_init(window_get_width(), window_get_height(), window_handle());
        //alarm[0] = 1;  //only needed if you want to modify the resolution of the window when you change to borderless windowed mode
        is_border = false;
    }
    else
    {
        bwindow_reset(window_handle());   //return the border to the window (keeps any resolution changes made with the init function
        //window_set_size(width, height);  //used to choose the window resolution for a bordered window (adding the arguments to bwindow_reset breaks the extension)
        is_border = true;
   }
   init_window = false;
}



//If you have problems with your game being stretched, resize the application surface to the new window width and height using surface_resize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Method 1

//slightly before showing/hiding the border you need to set the window in front of all other windows/the taskbar when removing the border
//or behind the taskbar (and allow alt-tabbing and other windows coming in front of the game window) when showing the border.
//the remaining code for this method is in the end step event. I recommend using this method.


    if(is_border)
    {
        bwindow_in_front(window_handle());  //if the window currently has a border, call bwindow_in_front which will set the window in front of the taskbar and all other windows
    }
    else bwindow_not_front(window_handle());//if it does not have a border, allow other windows to come in front when alt-tabbing/clicking on them.
    
    init_window = true; //flag checked in part 2.

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Method 2

//This second method is a tiny bit simpler than the first but will center the window when switching from borderless to bordered.
//It also has problems if you modify the display settings while the game is running (prior to using it) as display_reset()
//"Resets the display settings to the ones that were set when the game was started"
//This also runs into problems with Borderless Alt-tab/Loss of Focus

/*

if(keyboard_check_pressed(vk_enter))
{
    if(is_border)
    {
        //passes the desired width and height and the window handle to the dll, resizes the window, removes the border, and sets it to the front
        bwindow_init(window_get_width(), window_get_height(), window_handle());
        //alarm[0] = 1;  //only needed if you want to modify the resolution of the window when you change to borderless windowed mode
        is_border = false;
    }
    else
    {
        bwindow_reset(window_handle());   //return the border to the window (keeps any resolution changes made with the init function)
        is_border = true;
        display_reset(0, false); //resets display so the bordered window is not in front of all other windows (and the taskbar). Also centers the window on the screen
   }
}

if(keyboard_check_pressed(vk_escape)) game_end();

//If you have problems with your game being stretched, resize the application surface to the new window width and height using surface_resize()

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Borderless Alt-tab/Loss of Focus

//One of the advantages to borderless windowed mode is that it allows you to alt-tab easily.
//If there was no way to implement this with my extension, it would make a lot of people angry.

if(!is_border &amp;&amp; os_is_paused())  //checks if there is a pause event. For Windows, this occurs when you alt-tab/click off the window (the window loses focus).
{                                   //os_is_paused will be true for a single step following loss of focus.
    bwindow_not_front(window_handle()); //allows other windows/the taskbar to be in front of the game. This is only needed if the window is borderless.
    
    //If you use Method 2, you need a way to pause the game here (you should have that anyway really). Detailed more below
}


  //Now, if you use Method 2 and if you don't call bwindow_in_front following the bwindow_not_front call (if it is borderless). The extension will break.
  //You can't call it in the same step event as bwindow_init/bwindow_reset either (also causes it to bug out).
  //So, you need to have a way of pausing the game when it loses focus and then call bwindow_in_front when you unpause (again, only when borderless is enabled).

  //Just for testing, I have it so you press A before trying to switch again with Enter (or not to see it break, promise it won't crash).

//if(keyboard_check_pressed(ord('A'))) bwindow_in_front(window_handle());
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
